/*
 * ************************************************************
 * 文件：build.gradle  模块：app  项目：component
 * 当前修改时间：2019年04月13日 08:43:54
 * 上次修改时间：2019年04月12日 15:52:45
 * 作者：Cody.yi   https://github.com/codyer
 *
 * 描述：app
 * Copyright (c) 2019
 * ************************************************************
 */

apply plugin: 'com.android.application'

//加载签名配置的文件
Properties props = new Properties()
props.load(new FileInputStream(file("signing.properties")))

android {

    // 签名配置
    signingConfigs {
        config {
            keyAlias props['KEY_ALIAS']
            keyPassword props['KEY_PASSWORD']
            storeFile file(props['KEYSTORE_FILE'])
            storePassword props['KEYSTORE_PASSWORD']
            v2SigningEnabled true
        }
    }

    dataBinding {
        enabled true
    }

    // 编译sdk版本
    compileSdkVersion rootProject.ext.compileSdkVersion

    // 构建工具版本
    // 默认配置
    defaultConfig {
        applicationId "com.cody.component"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName // 版本号
        // dex突破65535的限制
        multiDexEnabled true
    }

    // 构建类型，此处配置debug和release版本的一些参数，像混淆、签名配置。
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    if (isLocalMaven) {
        implementation rootProject.ext.dependencies["local-component"]
        annotationProcessor rootProject.ext.dependencies["local-compiler"]
    } else if (isComponent) {
        implementation project(":http-core")
        implementation project(":bus-core")
        implementation project(":bind-banner")
        implementation project(":http-cat")
        implementation project(":hybrid-core")
        annotationProcessor project(":bus-compiler")
        annotationProcessor project(":http-compiler")
    } else {//if (isApp || isJitPack)
        implementation rootProject.ext.dependencies["component"]
        annotationProcessor rootProject.ext.dependencies["compiler"]
    }
    implementation rootProject.ext.dependencies["constraintlayout"]
    implementation rootProject.ext.dependencies["material"]
}
